/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:'Proxima Nova bold';src:url(../fonts/ProximaNova-Bold.eot);src:url(../fonts/ProximaNova-Bold.eot?#iefix) format('embedded-opentype'),url(../fonts/ProximaNova-Bold.woff2) format('woff2'),url(../fonts/ProximaNova-Bold.woff) format('woff'),url(../fonts/ProximaNova-Bold.ttf) format('truetype'),url(../fonts/ProximaNova-Bold.svg#svgFontName) format('svg');font-weight:700;font-style:normal}@font-face{font-family:'Proxima Nova regular';src:url(../fonts/ProximaNova-Regular.eot);src:url(../fonts/ProximaNova-Regular.eot?#iefix) format('embedded-opentype'),url(../fonts/ProximaNova-Regular.woff2) format('woff2'),url(../fonts/ProximaNova-Regular.woff) format('woff'),url(../fonts/ProximaNova-Regular.ttf) format('truetype'),url(../fonts/ProximaNova-Regular.svg#svgFontName) format('svg');font-weight:400;font-style:normal}@font-face{font-family:'Open sans light';src:url(../fonts/OpenSans-Light.eot);src:url(../fonts/OpenSans-Light.eot?#iefix) format('embedded-opentype'),url(../fonts/OpenSans-Light.woff2) format('woff2'),url(../fonts/OpenSans-Light.woff) format('woff'),url(../fonts/OpenSans-Light.ttf) format('truetype'),url(../fonts/OpenSans-Light.svg#svgFontName) format('svg');font-weight:300;font-style:normal}section.features .feature-slider{margin-top:5.6rem}section.features .feature-slider .slick-slide{outline:0}section.features .feature-slider .slick-btn{display:block;width:2rem;height:100%;z-index:99}section.features .feature-slider .slick-btn::before{content:""}section.features .feature-slider .slick-btn.slick-prev{left:0;background:url(../img/slider/prev.svg) center/80% no-repeat}section.features .feature-slider .slick-btn.slick-next{right:0;background:url(../img/slider/next.svg) center/80% no-repeat}section.features .feature-block{padding-right:1rem;padding-left:1rem;text-align:center}section.features .feature-block h3{font-size:2rem;margin-bottom:3rem;font-family:"Proxima Nova bold",sans-serif}section.features .feature-block p{font-size:1.6rem;display:inline-block;width:80%}section.features .feature-block a{color:#4aa223}section.features .feature-img-box{margin-bottom:6rem}section.features .feature-img-box img{margin:0 auto;height:9rem}.header{margin-top:1rem;margin-bottom:7rem;height:7rem}.header .phone-link{display:inline-block;font-family:"Proxima Nova bold",sans-serif;font-size:2rem;line-height:7rem;height:7rem;color:#292929}.header .wrap{width:100%;display:table;height:7rem}.header .wrap-block{display:table-cell;vertical-align:middle;text-align:right}.header .btn-header{height:5rem;padding:0 3rem}.main{padding-top:1.5rem;padding-bottom:10rem;background:url(../img/main-background.jpg) center center/cover no-repeat #fff}.main-title h1{font-family:"Proxima Nova bold",sans-serif;margin-bottom:5rem;font-size:4rem;text-transform:uppercase;line-height:1.45}.main-subtitle{margin-bottom:6rem;font-size:2.4rem;line-height:1.2;color:#292929}.main span.min-price{display:inline-block;padding:2rem 4rem;margin-bottom:4rem;font-size:1.8rem;text-align:center;background-color:#49be15;color:#fff}.main span.min-price strong{font-family:"Proxima Nova bold",sans-serif;font-size:3rem}.main-trigger{display:block;font-family:"Proxima Nova bold",sans-serif;font-size:2.2rem;text-transform:uppercase}.main-form h2 strong{font-family:"Proxima Nova bold",sans-serif;font-size:1.9rem}.main-form small{display:inline-block;margin-top:1.5rem;text-align:center;font-size:1.2rem}.main-form-note{display:inline-block;margin-top:3.5rem;margin-left:3rem;font-size:1.2rem;text-align:left}@media (max-width:991.98px){.feature-slider{width:calc(100% - 3rem);left:1.5rem}.header{height:auto;margin-bottom:3rem;text-align:center}.header .wrap-block{text-align:center}section{padding-top:5rem}.main{background-position:left top;padding-bottom:3.5rem}.main-title{text-align:center}.main-title h1{font-size:3rem;margin-bottom:3rem}.main-subtitle{font-size:2.2rem;margin-bottom:3rem}.main span.min-price{margin-bottom:2.5rem}.main-trigger{font-size:1.9rem;margin-bottom:2.5rem}.main-form{margin-bottom:2.3rem}.main-form-note{display:inline-block;margin:0;text-align:left}.main-form-note-container{text-align:center}}@media (max-width:767.98px){.header{height:12.4rem;margin-bottom:3rem;text-align:center;background-color:#fff}.header .phone-link{font-size:1.4rem;line-height:6.2rem;height:6.2rem}.header .wrap{height:6.2rem}.header .wrap-block{text-align:center}.header .btn-header{height:3.6rem}.header .btn-header span{display:none}.header .btn-header::after{content:"консультация"}.main-title{text-align:center}.main-title h1{font-size:2.2rem}.main-title-subtitle{font-size:1.8rem}}.popup{display:none;position:fixed;top:0;left:0;width:100%;height:100%;z-index:10;background-color:rgba(0,0,0,.5)}.popup-close-btn{border:none;position:absolute;width:2rem;height:2rem;top:0;right:-4rem;background:url(../img/close.svg) center/contain no-repeat;color:#fff}.popup-window{position:fixed;width:35rem;top:20rem;left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.popup .popup-form{padding:3.4rem 5rem 5rem}.popup .popup-form h4{font-family:"Proxima Nova bold",sans-serif;margin-bottom:0;font-size:1.8rem}.popup .popup-form p{font-size:1.8rem;margin-bottom:4rem}body.popup-opened{overflow:hidden;position:fixed}@media (max-width:991.98px){.popup-window{position:fixed;width:calc(100% - 10rem);max-width:35rem;left:50%;top:2rem;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%)}.popup .popup-form .button{height:4rem}}.form{padding:5rem 4.5rem;background-color:#fff;text-align:center}.form h2{margin-bottom:4rem;font-size:1.8rem}.form input,.form textarea{display:block;padding:1rem;height:5rem;width:100%;margin-bottom:2.5rem;border-radius:.5rem;border:1px solid #ddd;font-size:1.5rem}.form textarea{height:initial}.form label{position:absolute;left:50%;-webkit-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);padding:0 1rem;font-size:1.3rem;color:#565656;background-color:#fff}.form .button{width:100%;font-size:1.6rem;height:6.5rem}.price{background:url(../img/price/bg-price.png) #358015}.price-title{margin-bottom:3.5rem;font-family:"Proxima Nova bold",sans-serif;font-size:1.9rem;line-height:1.053}.price-button-wrap{text-align:right}.price-button-wrap .price-button-header{width:34rem}.price-block{height:100%;padding:3rem;color:#1a1820;background-color:#fff;text-align:center}.price-block img{max-width:100%;margin-bottom:3.5rem}.price-tag{margin-bottom:3.5rem;font-family:"Proxima Nova bold",sans-serif;font-size:3rem;line-height:1.053}.price-list{margin-bottom:2.5rem;min-height:15rem;padding-left:0;font-size:1.8rem;line-height:1.667}.price-list-link{display:none;color:#006b00;font-size:1.8rem;text-decoration:underline}.price-list-link:hover{color:#009e00}.price-list li{list-style-type:none}.price-list li::before{content:'';display:inline-block;margin-right:1rem;width:1.6rem;height:1.6rem;background:url(../img/price/check.svg) center center/100% no-repeat}.price-button.button{width:20rem;font-size:1.8rem;height:6.5rem}@media (max-width:1199.98px){.price-button-wrap{margin-bottom:3rem;text-align:center}.price-button-wrap .price-button-header{width:100%}}@media (max-width:991.98px){.price-block{height:auto;margin-bottom:2rem}.price-tag{margin-bottom:2rem}.price-list{display:none}.price-list-link{display:block;margin-bottom:3rem}}.feedback{padding-bottom:10rem;background:url(../img/feedback/bg-feedback.png) left top;color:#1a1820}.feedback-object{text-align:left;font-size:1.5rem;margin-bottom:5rem}.feedback-object strong{font-family:"Proxima Nova bold",sans-serif}.feedback-customer{text-align:left}.feedback-customer-info,.feedback-customer-photo{display:inline-block;vertical-align:middle}.feedback-customer-info h4{font-size:1.4rem;margin:0}.feedback-customer-photo{margin-right:2rem}.feedback-customer-photo img{border-radius:50%}.feedback-customer-name{margin:0;font-size:1.6rem;font-family:"Proxima Nova bold",sans-serif}.feedback-text{position:relative;margin-top:2rem;padding:2.5rem;border:2px solid #49be15;font-size:1.5rem;line-height:1.2}.feedback-text::before{content:'';z-index:0;position:absolute;top:calc(-1.5rem - 1px);left:4rem;width:2rem;height:1.5rem;background-color:#fff;-webkit-transform:skewX(20deg) skewY(35deg) translateX(1.5px) translateY(2px);-ms-transform:skewX(20deg) skewY(35deg) translateX(1.5px) translateY(2px);transform:skewX(20deg) skewY(35deg) translateX(1.5px) translateY(2px);-webkit-transform-origin:0 0;-ms-transform-origin:0 0;transform-origin:0 0}.feedback-text .speech{z-index:-1;position:absolute;top:calc(-1.5rem - 1px);left:4rem;width:2rem;height:1.5rem;background-color:#49be15;-webkit-transform:skewX(20deg) skewY(35deg);-ms-transform:skewX(20deg) skewY(35deg);transform:skewX(20deg) skewY(35deg);-webkit-transform-origin:0 0;-ms-transform-origin:0 0;transform-origin:0 0}.feedback-slider{position:relative;margin:10rem 5rem 0;padding:3rem;background-color:#fff;box-shadow:6px 10px 18px 0 rgba(0,0,0,.11)}.feedback-slider-item{padding:1rem}.feedback-slider .slick-slide{outline:0}.feedback-slider .slick-btn{position:absolute;width:5rem;height:6rem}.feedback-slider .slick-btn::before{content:""}.feedback-slider .slick-btn.slick-prev{left:-5rem;background:url(../img/feedback/Prev.svg) center/1.3rem no-repeat #49be15}.feedback-slider .slick-btn.slick-next{right:-5rem;background:url(../img/feedback/Next.svg) center/1.3rem no-repeat #49be15}.feedback-form{background:#fff;position:relative;margin:6rem auto 0;padding:5rem;text-align:center}.feedback-form small{display:none;margin-top:1.5rem;text-align:center;font-size:1.2rem}.feedback-form h3{margin-bottom:0;font-family:"Proxima Nova bold",sans-serif;font-size:2.2rem}.feedback-form input{margin-bottom:3rem}.feedback-form button.button{width:26rem}.feedback-bg-hand{position:absolute;bottom:-10rem;left:-40rem}@media (max-width:1199.98px){.feedback-form{padding:5rem 2rem}}@media (max-width:991.98px){.feedback-form small{display:block}.feedback-bg-hand{display:none}.feedback-slider{margin:2rem 1rem 0}.feedback-slider .slick-btn.slick-prev{left:-2.5rem}.feedback-slider .slick-btn.slick-next{right:-2.5rem}}@media (max-width:767.98px){.popup-window{width:calc(100% - 6rem)}.popup .popup-form{padding:3.4rem 2rem}.popup .popup-form .button{width:100%;font-size:1.6rem}.popup .popup-form p{font-size:1.6rem}.popup-close-btn{right:-2.5rem}.feedback button.button{width:100%;margin:0 0 4rem}.feedback-form{margin:3rem auto 0;padding:2rem}.feedback-form h3{margin:1.5rem 0}.feedback-form form.form{padding:1rem}}.scheme{padding-bottom:10rem;color:#1a1820;background:url(../img/scheme/bg-hand.jpg) bottom -15rem right no-repeat}.scheme-item{text-align:left}.scheme-item img{display:inline-block;height:10rem}.scheme-item h3{margin:3rem 0;font-family:"Proxima Nova bold",sans-serif;font-size:2rem}.scheme-item p{font-size:1.7rem}@media (max-width:1600.98px){.scheme{background-position:bottom -15rem right -30rem}}@media (max-width:991.98px){.scheme{background-position:bottom -15rem right -30rem}.scheme-item{text-align:center}}@media (max-width:767.98px){.scheme{background:0 0}.scheme-item h3{margin:1.5rem 0}}.inclusive{background-color:#f5f5f5}.inclusive .section-header-title{color:#49be15;font-size:5rem;margin-top:0}.inclusive .section-header-subtitle{font-size:1.6rem}.inclusive-item{height:10rem;text-align:left}.inclusive-item-no{display:inline-block;vertical-align:top;width:5rem;height:5rem;padding:2px;border:2px solid #49be15;border-radius:50%;font-family:"Proxima Nova bold",sans-serif;color:#fff;font-size:2rem;text-align:center}.inclusive-item-no span{display:inline-block;width:100%;height:100%;margin:auto;background:-webkit-linear-gradient(bottom,#358015 0,#36940d 100%);background:linear-gradient(to top,#358015 0,#36940d 100%);border-radius:50%;line-height:4rem}.inclusive-item-content{max-width:calc(100% - 8rem);margin-left:1.8rem;margin-top:1.5rem;display:inline-block;text-align:left}.inclusive-item-content h4{margin:0;padding:0;font-size:1.6rem;font-family:"Proxima Nova bold",sans-serif}.inclusive-item-content .incl-item-text{font-size:1.3rem}.problems{position:relative;padding-top:12rem;padding-bottom:10rem}.problems .section-header-title{margin-top:0;margin-bottom:8.5rem;line-height:36px}.problems-list{padding:5rem;border-width:4px;border-style:solid;margin-bottom:2.5rem;height:45rem;position:relative}.problems-list h3{font-family:"Proxima Nova bold",sans-serif;margin:0 0 5rem;text-align:left;font-size:2.1rem;line-height:1.8rem;color:#313131}.problems-list ul{display:-webkit-box;display:-webkit-flex;display:flex;height:calc(100% - 6.8rem);-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;flex-direction:column;-webkit-box-pack:justify;-webkit-justify-content:space-between;justify-content:space-between;margin:0;padding:0;text-align:left;list-style-type:none}.problems-list ul li{position:relative;font-size:1.6rem;padding-left:4.5rem}.problems-list ul li::before{content:'';background-size:100%;position:absolute;display:inline-block;top:0;left:0;width:2rem;height:2rem}.problems-list_bad{border-color:rgba(49,49,49,.5)}.problems-list_bad h3{opacity:.5}.problems-list_bad ul li::before{background:url(../img/problems/no.png) center no-repeat}.problems-list_good{border-color:#49be15}.problems-list_good ul li::before{background:url(../img/problems/yes.png) center no-repeat}.problems-woman{position:absolute;bottom:0;-webkit-transform:translateX(-18rem);-ms-transform:translateX(-18rem);transform:translateX(-18rem)}html{font-size:10px}body{margin:0;font-family:"Proxima Nova regular",sans-serif}button:focus,input:focus,textarea:focus{outline:0}a:hover{text-decoration:none}.button{border-radius:.8rem;cursor:pointer;background:-webkit-linear-gradient(bottom,#f5ad00 0,#ffb504 100%);background:linear-gradient(0deg,#f5ad00 0,#ffb504 100%);box-shadow:4px 7px 13px 0 rgba(0,0,0,.04);color:#fff;font-size:1.2rem;text-transform:uppercase;-webkit-transition:.2s;transition:.2s;border:1px solid #fcb303}.button:hover{color:#f2f2f2;background:-webkit-linear-gradient(bottom,#dc9b00 0,#eaa500 100%);background:linear-gradient(0deg,#dc9b00 0,#eaa500 100%)}section{text-align:center;padding-top:10rem;padding-bottom:12rem}section .section-header-light{color:#fff}section .section-header-title{font-size:3.6rem;font-family:"Proxima Nova bold",sans-serif}section .section-header-subtitle{margin-top:5rem;margin-bottom:9rem;font-size:1.8rem}@media (max-width:991.98px){.problems-woman{display:none}.problems-list{height:auto;padding-bottom:2rem}.problems-list ul li{margin-bottom:3rem}section{padding-top:5rem;padding-bottom:3rem}section .section-header-title{font-size:2.4rem}section .section-header-subtitle{margin-top:2.5rem;margin-bottom:3rem;font-size:1.8rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
